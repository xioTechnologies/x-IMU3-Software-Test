// This file was generated by x-IMU3-GUI/Source/Windows/Graphs/generate_graph_windows.py

#include "../../Convert.h"
#include "../../DevicePanel/DevicePanel.h"
#include "SerialAccessoryGraphWindow.h"

juce::ValueTree SerialAccessoryGraphWindow::settingsTree_("SerialAccessoryGraphSettings");

SerialAccessoryGraphWindow::SerialAccessoryGraphWindow(const juce::ValueTree& windowLayout, const juce::Identifier& type_, DevicePanel& devicePanel_, GLRenderer& glRenderer)
        : GraphWindow(windowLayout, type_, devicePanel_,
                      glRenderer,
                      "CSV",
                      { "1", "2", "3", "4", "5", "6", "7", "8" },
                      { UIColours::tags[1], UIColours::tags[2], UIColours::tags[3], UIColours::tags[4], UIColours::tags[5], UIColours::tags[6], UIColours::tags[7], UIColours::tags[8] },
                      settingsTree_,
                      false)
{
    callbackIDs.push_back(devicePanel.getConnection()->addSerialAccessoryCallback(serialAccessoryCallback = [&](auto message)
    {
        std::vector<float> values;
        for (const auto& string : juce::StringArray::fromTokens(message.char_array, ",", ""))
        {
            values.push_back(string.getFloatValue());
        }
        write(message.timestamp, values);
    }));
}

SerialAccessoryGraphWindow::~SerialAccessoryGraphWindow()
{
    for (const auto callbackID : callbackIDs)
    {
        devicePanel.getConnection()->removeCallback(callbackID);
    }
}
